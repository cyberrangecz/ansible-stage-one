- name: check the connection with all management and routers machines
  hosts: all
  gather_facts: no

  tasks:
  - ping:
    register: result
    until: result is not failed
    retries: 25
    delay: 60

- name: NAT on MAN node
  hosts: man
  gather_facts: yes
  become: yes
  become_user: root

  tasks:
  - name: setup NAT
    iptables:
      chain: POSTROUTING
      out_interface: '{{ hostvars["man"].ansible_facts.default_ipv4.interface }}'
      table: nat
      jump: MASQUERADE

- name: Sandbox networking
  hosts:
  - management
  - routers
  gather_facts: yes
  become: yes
  become_user: root

  vars:
    other_interfaces: "
            {%- set all_interfaces = namespace(
                interfaces=[]
            ) -%}
            {%- for ansible_interface in ansible_interfaces -%}
            {%- set all_interfaces.interfaces = all_interfaces.interfaces + [hostvars[inventory_hostname]['ansible_' + ansible_interface]] -%}
            {%- endfor -%}
            {%- set other_interfaces = all_interfaces.interfaces | selectattr('macaddress', 'defined') |
                rejectattr('macaddress', 'in', (interfaces | map(attribute='mac') | list) ) | list -%}
            {{ other_interfaces }}"

  tasks:
  - name: include role interface
    include_role:
      name: interface
    vars:
      interface_mac: "{{ interface.mac | default(interface.macaddress) }}"
      interface_default_gateway: '{{ interface.def_gw_ip | default() }}'
      interface_routes: '
             {%- set all_routes = namespace (
                  routes = []
              ) -%}
             {%- if interface.routes is defined and interface.routes -%}
             {%- for route in interface.routes -%}
             {%- set all_routes.routes = all_routes.routes + [{
                                "gateway": route.gw,
                                "mask": route.mask,
                                "network": route.net
                                }] -%}
             {%- endfor -%}
             {%- endif -%}
             {{ all_routes.routes }}'
    with_items: "{{ interfaces | union(other_interfaces) }}"
    loop_control:
      loop_var: interface

  - name: set ip forward
    sysctl:
      name: net.ipv4.ip_forward
      value: '{% if ip_forward %}1{% else %}0{% endif %}'
    when: ip_forward is defined

- name: Test sandbox networking
  hosts:
  - management
  - routers
  become: yes
  become_user: root

  tasks:
  - command: 'ping {{ hostvars["man"].ansible_facts.default_ipv4.gateway }} -c 3'
    changed_when: False

- name: User access
  hosts:
  - man
  - uan
  gather_facts: no
  become: yes
  become_user: root
  vars:
    user_name: user-access

  roles:
    - role: kypo-user-access
      kypo_user_access_username: '{{ user_name }}'

